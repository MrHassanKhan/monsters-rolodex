{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","m","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJbC,G,MAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAC,GAAC,OAChB,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,WCNhBO,G,MAAY,SAAC,GAAD,IAAEN,EAAF,EAAEA,KAAMO,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aAArB,OACrB,uBAAOb,UAAU,aAAac,KAAK,OAAOT,KAAMA,EAAMO,YAAaA,EAClEG,SAAUF,MCsCAG,E,kDApCb,aAAe,IAAD,8BACZ,gBAcFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEAWO,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACnEF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,+BAMhC,IAAD,EACyBC,KAAKN,MAA9Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAClD,OACE,sBAAK/B,UAAU,MAAf,UAEE,gDACA,cAAC,EAAD,CAAWK,KAAK,SAASO,YAAY,iBACrCC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUL,SAAUqB,W,GA/BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.230d9062.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    \r\n    <div className=\"card-container\">\r\n        <img alt=\"mosnter\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    \r\n    <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(m => (\r\n                <Card key={m.id} monster={m}></Card>\r\n            ))\r\n        }\r\n    </div>\r\n)","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({name, placeholder, handleChange}) => (\r\n    <input className=\"search-box\" type=\"text\" name={name} placeholder={placeholder}\r\n     onChange={handleChange} />\r\n)\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    // for simple funtion we bind it here to assing scoprof this class\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json())\n    .then(users => this.setState({monsters: users}));\n  }\n  handleChange= (e) => {\n    this.setState({searchField: e.target.value});\n  }\n  \n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        {/* <input type=\"text\" onChange={(e) => this.setState({searchField: e.target.value})} /> */}\n        <h1>Moster Rolodex</h1>\n        <SearchBox name=\"search\" placeholder=\"search monster\"\n        handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}